{"version":3,"sources":["components/common/FormControls/FromControls.module.scss","components/common/FormControls/FromControls.js","utils/validators.js","components/Login/Login.module.css","components/Login/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","FormControl","input","meta","props","hasError","touched","error","className","style","formControl","children","Textarea","restProps","Input","createField","placeholder","name","validate","component","maxLengthCreator","maxLength","value","length","required","reduxForm","form","handleSubmit","onSubmit","styleForm","formSummaryError","autoComplete","type","checkbox","htmlFor","id","Login","formObj","login","email","password","rememberMe","render","isAuth","to","formContainer","React","Component","connect","state","auth"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB,yC,6PCGnHC,EAAc,SAAC,GAA4B,EAA3BC,MAA4B,IAArBC,EAAoB,EAApBA,KAASC,EAAW,iBACzCC,EAAWF,EAAKG,SAAWH,EAAKI,MACtC,OACE,sBAAKC,UAAS,UAAKC,IAAMC,YAAX,YAA0BL,EAAWI,IAAMF,MAAQ,IAAjE,UACGH,EAAMO,SACNN,GAAY,+BAAOF,EAAKI,YAKlBK,EAAW,SAACR,GACvB,IAAOF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KAAd,YAAoCC,EAApC,IACA,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,oDAAcF,GAAWW,QAG7CC,EAAQ,SAACV,GACpB,IAAOF,EAA6BE,EAA7BF,MAAgBW,GAAaT,EAAtBD,KAAd,YAAoCC,EAApC,IACA,OAAO,cAACH,EAAD,2BAAiBG,GAAjB,aAAwB,iDAAWF,GAAWW,QAG1CE,EAAc,SAACC,EAAaC,EAAMC,EAAUC,GAA9B,IAAyCf,EAAzC,uDAAiD,GAAjD,OACzB,8BACE,cAAC,IAAD,aAAOe,UAAWA,EAAWD,SAAUA,EAAUD,KAAMA,EAAMD,YAAaA,GAAiBZ,Q,iCC1B/F,sCAKagB,EAAmB,SAACC,GAAD,OAAe,SAACC,GAC9C,KAAIA,GAASA,EAAMC,QAAUF,GAC7B,MAAM,iBAAN,OAAwBA,EAAxB,cAGaG,IAVE,SAACF,GAChB,IAAIA,EACJ,MAAO,sB,oBCDTvB,EAAOC,QAAU,CAAC,SAAW,0B,0JCuBdyB,cAAU,CAACC,KAAM,SAAjBD,EAjBG,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcpB,EAAW,EAAXA,MAChC,OACE,uBAAMqB,SAAUD,EAAhB,UACGpB,GAAS,sBAAKC,UAAWqB,IAAUC,iBAA1B,cAA8CvB,EAA9C,OACTQ,YAAY,QAAS,QAAS,CAACS,KAAWV,IAAO,CAACiB,aAAc,OAAQC,KAAM,UAC9EjB,YAAY,WAAY,WAAY,CAACS,KAAWV,IAAO,CAACiB,aAAc,OAAQC,KAAM,aACrF,sBAAKxB,UAAWC,IAAMwB,SAAtB,UACE,uBAAOC,QAAQ,gBAAf,yBACCnB,YAAY,GAAI,aAAc,GAAI,QAAS,CAACoB,GAAI,gBAAiBH,KAAM,gBAE1E,8BACE,wBAAQA,KAAM,SAAd,4B,uBCXFI,E,4MACJR,SAAW,SAACS,GACV,EAAKjC,MAAMkC,MAAMD,EAAQE,MAAOF,EAAQG,SAAUH,EAAQI,a,EAG5DC,OAAS,WACP,OAAI,EAAKtC,MAAMuC,OACN,cAAC,IAAD,CAAUC,GAAI,aAIrB,sBAAKpC,UAAWC,IAAMoC,cAAtB,UACE,uCACA,cAAC,EAAD,CAAgBjB,SAAU,EAAKA,e,YAbnBkB,IAAMC,WAuBXC,uBAJS,SAACC,GAAD,MAAY,CAClCN,OAAQM,EAAMC,KAAKP,UAGkB,CAACL,WAAzBU,CAAiCZ","file":"static/js/6.409f84d5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FromControls_formControl__11Fsg\",\"error\":\"FromControls_error__1MjzQ\",\"formSummaryError\":\"FromControls_formSummaryError__3xpUU\"};","import React from 'react';\r\nimport style from './FromControls.module.scss';\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={`${style.formControl} ${hasError ? style.error : ''}`}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n  const {input, meta, ...restProps} = props;\r\n  return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}) => (\r\n  <div>\r\n    <Field component={component} validate={validate} name={name} placeholder={placeholder} {...props}/>\r\n  </div>\r\n)\r\n\r\nexport default FormControl;\r\n","const required = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n  if (value && value.length <= maxLength) return undefined;\r\n  return `Max length is ${maxLength} symbols`;\r\n}\r\n\r\nexport default required;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Login_checkbox__2h2-B\"};","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport styleForm from './../common/FormControls/FromControls.module.scss';\r\nimport {reduxForm} from 'redux-form';\r\nimport {createField, Input} from \"../common/FormControls/FromControls\";\r\nimport required from \"../../utils/validators\";\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {error && <div className={styleForm.formSummaryError}> {error} </div>}\r\n      {createField('Email', 'email', [required], Input, {autoComplete: 'true', type: 'email'})}\r\n      {createField('Password', 'password', [required], Input, {autoComplete: 'true', type: 'password'})}\r\n      <div className={style.checkbox}>\r\n        <label htmlFor='loginCheckbox'>Remember me</label>\r\n        {createField('', 'rememberMe', [], 'input', {id: 'loginCheckbox', type: 'checkbox'})}\r\n      </div>\r\n      <div>\r\n        <button type={'submit'}>Log in</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default reduxForm({form: 'login'})(LoginForm);\r\n","import React from 'react';\r\nimport style from './Login.module.css';\r\nimport LoginReduxForm from './LoginForm';\r\nimport {login} from \"../../redux/reducers/authReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router\";\r\n\r\nclass Login extends React.Component {\r\n  onSubmit = (formObj) => {\r\n    this.props.login(formObj.email, formObj.password, formObj.rememberMe);\r\n  }\r\n\r\n  render = () => {\r\n    if (this.props.isAuth) {\r\n      return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n      <div className={style.formContainer}>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={this.onSubmit}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps,{login})(Login);\r\n"],"sourceRoot":""}